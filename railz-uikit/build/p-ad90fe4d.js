var r,t=new Uint8Array(16);function o(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(t)}const n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function e(r){return"string"==typeof r&&n.test(r)}for(var i=[],f=0;f<256;++f)i.push((f+256).toString(16).substr(1));function u(r,t,n){var f=(r=r||{}).random||(r.rng||o)();if(f[6]=15&f[6]|64,f[8]=63&f[8]|128,t){n=n||0;for(var u=0;u<16;++u)t[n+u]=f[u];return t}return function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(i[r[t+0]]+i[r[t+1]]+i[r[t+2]]+i[r[t+3]]+"-"+i[r[t+4]]+i[r[t+5]]+"-"+i[r[t+6]]+i[r[t+7]]+"-"+i[r[t+8]]+i[r[t+9]]+"-"+i[r[t+10]]+i[r[t+11]]+i[r[t+12]]+i[r[t+13]]+i[r[t+14]]+i[r[t+15]]).toLowerCase();if(!e(o))throw TypeError("Stringified UUID is invalid");return o}(f)}export{u as v}