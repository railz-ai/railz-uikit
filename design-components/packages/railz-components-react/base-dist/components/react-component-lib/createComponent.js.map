{"version":3,"file":"createComponent.js","sourceRoot":"","sources":["../../../src/components/react-component-lib/createComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createElement } from 'react';\n\nimport {\n  attachProps,\n  camelToDashCase,\n  createForwardRef,\n  dashToPascalCase,\n  isCoveredByReact,\n  mergeRefs,\n} from './utils';\n\nexport interface HTMLStencilElement extends HTMLElement {\n  componentOnReady(): Promise<this>;\n}\n\ninterface StencilReactInternalProps<ElementType> extends React.HTMLAttributes<ElementType> {\n  forwardedRef: React.RefObject<ElementType>;\n  ref?: React.Ref<any>;\n}\n\nexport const createReactComponent = <\n  PropType,\n  ElementType extends HTMLStencilElement,\n  ContextStateType = {},\n  ExpandedPropsTypes = {}\n>(\n  tagName: string,\n  ReactComponentContext?: React.Context<ContextStateType>,\n  manipulatePropsFunction?: (\n    originalProps: StencilReactInternalProps<ElementType>,\n    propsToPass: any,\n  ) => ExpandedPropsTypes,\n  defineCustomElement?: () => void,\n) => {\n  if (defineCustomElement !== undefined) {\n    defineCustomElement();\n  }\n\n  const displayName = dashToPascalCase(tagName);\n  const ReactComponent = class extends React.Component<StencilReactInternalProps<ElementType>> {\n    componentEl!: ElementType;\n\n    setComponentElRef = (element: ElementType) => {\n      this.componentEl = element;\n    };\n\n    constructor(props: StencilReactInternalProps<ElementType>) {\n      super(props);\n    }\n\n    componentDidMount() {\n      this.componentDidUpdate(this.props);\n    }\n\n    componentDidUpdate(prevProps: StencilReactInternalProps<ElementType>) {\n      attachProps(this.componentEl, this.props, prevProps);\n    }\n\n    render() {\n      const { children, forwardedRef, style, className, ref, ...cProps } = this.props;\n\n      let propsToPass = Object.keys(cProps).reduce((acc: any, name) => {\n        const value = (cProps as any)[name];\n\n        if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n          const eventName = name.substring(2).toLowerCase();\n          if (typeof document !== 'undefined' && isCoveredByReact(eventName)) {\n            acc[name] = value;\n          }\n        } else {\n          // we should only render strings, booleans, and numbers as attrs in html.\n          // objects, functions, arrays etc get synced via properties on mount.\n          const type = typeof value;\n\n          if (type === 'string' || type === 'boolean' || type === 'number') {\n            acc[camelToDashCase(name)] = value;\n          }\n        }\n        return acc;\n      }, {});\n\n      if (manipulatePropsFunction) {\n        propsToPass = manipulatePropsFunction(this.props, propsToPass);\n      }\n\n      const newProps: Omit<StencilReactInternalProps<ElementType>, 'forwardedRef'> = {\n        ...propsToPass,\n        ref: mergeRefs(forwardedRef, this.setComponentElRef),\n        style,\n      };\n\n      /**\n       * We use createElement here instead of\n       * React.createElement to work around a\n       * bug in Vite (https://github.com/vitejs/vite/issues/6104).\n       * React.createElement causes all elements to be rendered\n       * as <tagname> instead of the actual Web Component.\n       */\n      return createElement(tagName, newProps, children);\n    }\n\n    static get displayName() {\n      return displayName;\n    }\n  };\n\n  // If context was passed to createReactComponent then conditionally add it to the Component Class\n  if (ReactComponentContext) {\n    ReactComponent.contextType = ReactComponentContext;\n  }\n\n  return createForwardRef<PropType, ElementType>(ReactComponent, displayName);\n};\n"]}