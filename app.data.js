module.exports = [
  {"filepath":"pages/1index.md","title":"Home","description":"","link":"index","data":"<h1 align=\"center\">Railz UIKit</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/railz-ai/railz-uikit/blob/master/LICENSE\"><img src=\"https://img.shields.io/npm/l/@railzai/railz-uikit\" alt=\"Software License\"/></a>\n  <a href=\"https://www.npmjs.com/package/@railzai/railz-uikit\"><img src=\"https://img.shields.io/npm/v/@railzai/railz-uikit/latest.svg\" alt=\"Latest Package on NPM\"/></a>\n  <a href=\"https://github.com/railz-ai/railz-uikit/actions/workflows/publish.yml\"><img src=\"https://github.com/railz-ai/railz-uikit/actions/workflows/publish.yml/badge.svg\" alt=\"Latest Deployment\"/></a>\n  <a href=\"https://stenciljs.com/docs/style-guide\">\n          <img src=\"https://img.shields.io/badge/code_style-stencil/stylelint/prettier-5851ff.svg?style=flat-square\" alt=\"Code Style\" />\n      </a>\n</p>\n<h2 align=\"center\">Contains components libraries.</h2>\n\n- **Railz UIKit** is a library of components that features our implementation of [Railz Connect](https://railz.ai/product/connect) widget and extended components.\n\n- **Railz Tokens** is a library of design tokens.\n\n- **Railz Icons** is a library of icon components.\n\n<div class=\"buttons\">\n    <a class=\"button primary\" href=\"/getting-started.html\">\n      Get started\n    </a>\n    <a class=\"button\"\n      href=\"https://github.com/railz-ai/railz-uikit\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      GitHub\n    </a>\n</div>\n<railz-button label=\"button\" />\n","type":"md","dependencies":[]},{"filepath":"pages/2getting-started.md","title":"Getting Started","description":"","link":"getting-started","data":"# Getting Started\n\n## Installation\n\n#### Framework Specific Installation\n\n##### [Angular](https://www.npmjs.com/package/@railzai/railz-uikit-angular)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [React](https://www.npmjs.com/package/@railzai/railz-uikit-react)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [Vue](https://www.npmjs.com/package/@railzai/railz-uikit-vue)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [Web Component](https://www.npmjs.com/package/@railzai/railz-uikit)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n\n## Usage\n\n### Railz UIKit Usage\n\n#### React Usage\n\n```typescript jsx\nimport React, { useEffect, useState } from 'react';\n// import { RailzComponent } from '@railzai/railz-uikit-react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      // <RailzComponent first=\"Sade\" last=\"Adu\" />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n#### Angular Usage\n\n##### app.component.html\n\n```html\n<railz-component first=\"Sade\" last=\"Adu\"></railz-component>\n```\n\n##### app.module.ts\n\nImport the `RailzUikitModule` into your component module or app.module.ts file\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { RailzUikitModule } from '@railzai/railz-uikit-angular';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, RailzUikitModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\n#### Vue Usage\n\n##### App.vue\n\n```html\n<railz-component first=\"Sade\" last=\"Adu\"></railz-component>\n```\n\n##### main.js\n\nImport the `RailzUikit` into your main file\n\n```typescript\nimport { createApp } from 'vue';\nimport { RailzUikit } from '@railzai/railz-uikit-vue';\n\nimport App from './App.vue';\ncreateApp(App).use(RailzUikit).mount('#app');\n```\n\n\n## Customization\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/INSTALLATION.md","/home/runner/work/railz-uikit/railz-uikit/design-components/USAGE.md"]},{"filepath":"pages/3installation.md","title":"Installation","description":"","link":"installation","data":"# Installation\n\n#### Framework Specific Installation\n\n##### [Angular](https://www.npmjs.com/package/@railzai/railz-uikit-angular)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [React](https://www.npmjs.com/package/@railzai/railz-uikit-react)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [Vue](https://www.npmjs.com/package/@railzai/railz-uikit-vue)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n##### [Web Component](https://www.npmjs.com/package/@railzai/railz-uikit)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-uikit\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-uikit\n```\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/INSTALLATION.md"]},{"filepath":"pages/4theming.md","title":"Theming","description":"","link":"theming","data":"## Theming\n\nOur theming makes use of Sass variables to allow easy customization\n\n### Variables\n\n| Property   | Type    | Value                                                        |\n| ---------- | ------- | ------------------------------------------------------------ |\n| $primary   | `color` | <div class=\"palette\"><p class=\"primary\"></p> #00884F</div>   |\n| $secondary | `color` | <div class=\"palette\"><p class=\"secondary\"></p> #006037</div> |\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/THEMING.md"]},{"filepath":"pages/5design-tokens.md","title":"Design Tokens","description":"","link":"design-tokens","data":"# Design Tokens\n\n## Installation\n\nInstallation is not framework specific and can be used by any framework\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-tokens\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-tokens\n```\n\n\n### Usage\n\nImport the scss file into your own scss file\n\n```scss\n@use '../../../node_modules/@railzai/railz-uikit/scss/ui-kit/index' as *;\n```\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-tokens/INSTALLATION.md","/home/runner/work/railz-uikit/railz-uikit/design-tokens/USAGE.md"]},{"filepath":"pages/6icons.md","title":"Icons","description":"","link":"icons","data":"# Icons\n\n## Installation\n\n### Framework Specific Installation\n\n#### [Angular](https://www.npmjs.com/package/@railzai/railz-icons-angular)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-icons\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-icons\n```\n\n#### [React](https://www.npmjs.com/package/@railzai/railz-icons-react)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-icons\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-icons\n```\n\n#### [Vue](https://www.npmjs.com/package/@railzai/railz-icons-vue)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-icons\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-icons\n```\n\n#### [Web Component](https://www.npmjs.com/package/@railzai/railz-icons)\n\nWith NPM:\n\n```bash\nnpm install @railzai/railz-icons\n```\n\nWith Yarn:\n\n```bash\nyarn add @railzai/railz-icons\n```\n\n\n## Usage\n\n### Using the icon\n\n#### React Usage\n\n```typescript jsx\nimport React, { useEffect, useState } from 'react';\nimport { RailzDownloadIcon } from '@railzai/railz-icons-react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RailzDownloadIcon variant=\"solid\" />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n#### Angular Usage\n\n##### app.component.html\n\n```html\n<railz-download-icon variant=\"solid\"></railz-download-icon>\n```\n\n##### app.module.ts\n\nImport the `RailzIconsModule` into your component module or app.module.ts file\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { RailzIconsModule } from '@railzai/railz-icons-angular';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, RailzIconsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\n#### Vue Usage\n\n##### App.vue\n\n```html\n<railz-download-icon variant=\"solid\"></railz-download-icon>\n```\n\n##### app.module.ts\n\nImport the `RailzIconsModule` into your component module or app.module.ts file\n\n```typescript\nimport { createApp } from 'vue';\nimport { RailzIconsModule } from '@railzai/railz-icons-vue';\n\nimport App from './App.vue';\ncreateApp(App).use(RailzIconsModule).mount('#app');\n```\n\n### Using the icon property\n\n#### React Usage\n\n```typescript jsx\nimport React, { useEffect, useState } from 'react';\nimport { RailzButton } from '@railzai/railz-uikit-react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RailzButton icon=\"download\" />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n#### Angular Usage\n\n##### app.component.html\n\n```html\n<railz-button icon=\"download\"></railz-button>\n```\n\n##### app.module.ts\n\nImport the `RailzUikitModule` into your component module or app.module.ts file\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { RailzUikitModule } from '@railzai/railz-uikit-angular';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, RailzUikitModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\n#### Vue Usage\n\n##### App.vue\n\n```html\n<railz-button icon=\"download\"></railz-button>\n```\n\n##### app.module.ts\n\nImport the `RailzUikitModule` into your component module or app.module.ts file\n\n```typescript\nimport { createApp } from 'vue';\nimport { RailzUikit } from '@railzai/railz-uikit-vue';\n\nimport App from './App.vue';\ncreateApp(App).use(RailzUikit).mount('#app');\n```\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-icons/INSTALLATION.md","/home/runner/work/railz-uikit/railz-uikit/design-icons/USAGE.md"]},{"filepath":"pages/7contributing.md","title":"Contributing","description":"","link":"contributing","data":"# Contributing\n\nThe Railz UIKit library and documentation are open to contributions.\n\nYou can watch the series below on how to get started with contributing to open source projects.\n[How to Contribute to an Open Source Project on GitHub](https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github)\n\n## Conventions\n\n### Formatting\n\nRailz UIKit makes use of stylelint and eslint, therefore enable linting in your editor for automatic lint detection will make it easy for you to commit your code.\n\nTo format, run: `yarn lint`\n\nWhen you submit a Pull Request, our continuous integration pipeline will test for lint errors.\n\n## GitHub\n\n### Issues\n\nFor uniformity, we've prepared [templates](https://github.com/railz-ai/railz-uikit/issues/new/choose) for new issues that everyone can use. When submitting new issues, please be specific and comprehensive! Consider user stories, acceptance criteria, design, and any other details that developers and designers would find useful.\n\n### Branches\n\nThe current logic of branch management is a mix of 2 ideas - a clean, linear history of changes and a flow model.\n\n`master` - main branch, should have latest released, approved changes, always compilable and working. Changes should never be committed directly to this branch!\n\n`feature/*` - for features under development (should contain name of the ticket at begin)\n\n`bugfix/*` - for repairing non-fatal existing bugs\n\n`hotfix/*` - for critical bugs which require an immediate release\n\n### Commits\n\nThis project adheres to [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/), which are used to create the changelog. In commit messages, make sure to offer clear and sufficient information.\nYour commits should also be linked to an issue to allow us track progress of issues.\n\n```\n<type>!: <#issue_number> <descriptive summary>\n\n<optional details>\n```\n\n### Pull requests\n\nWe have [Semantic Pull Request](https://github.com/marketplace/semantic-prs) application installed on GitHub to ensure your commits follow the semantic [syntax](https://www.conventionalcommits.org/en/v1.0.0/#commit-message-with-description-and-breaking-change-footer).\nThis makes it easy to manage our changelog during a release.\n\n#### How to write your commits\n\n1. Make sure your commit is a [conventional commit](https://www.conventionalcommits.org/en/v1.0.0/#examples).\n2. Add a semantic prefix `bugfix:` or `feat:` or other [conventional commit types](https://github.com/commitizen/conventional-commit-types/blob/master/index.json) when commiting your code.\n\n#### Breaking Change\n\nPlease follow the instructions [here](https://www.conventionalcommits.org/en/v1.0.0/#commit-message-with-both--and-breaking-change-footer) to include a title and description if there is a breaking change.\n\n```\n<type>!: <#issue_number> <descriptive summary>\n\n<optional details>\n\nBREAKING CHANGE: <details about the change and migration steps (multiple lines allowed)>\n```\n\n### Merging\n\nWhen utilising tools on your local, make sure you use rebase. When merging in GitHub, ensure you use **Rebase and Merge.** to keep the **master** branch history clean.\n\n### Submitting a bug\n\nTo keep track of defect, we use GitHub issues. Please use our issue [templates](https://github.com/railz-ai/railz-uikit/issues/new/choose) to describe the problem so that we can understand and duplicate it.\n\nConsider the following:\n\n- Descriptive title\n- Expected versus Actual Behavior\n- How to Reproduce\n- If possible, a code snippet example\n- Did the problem arise after a recent release, if this is known?\n\n## Typing\n\nOur code base is TypeScript-based, and we intend to keep it that way. We've set up the project to help you stick to specific standards and guidelines. Here are some more things to think about:\n\n1. As much as possible, avoid using any.\n2. Always try to offer a type.\n3. Document all public APIs with JSDoc.\n4. Don't disregard linting errors; fix them.\n\n## Accessibility\n\nComponents must be accessible; we use axe-core to ensure that our components are accessible internally, and we urge contributors to do the same.\n\nSome resources:\n\n- [Google accessibility overview](https://developers.google.com/web/fundamentals/accessibility/)\n- [WAI-ARIA Authoring Practices](https://www.w3.org/TR/wai-aria-practices-1.1/)\n- [Axe Core tools](https://www.deque.com/axe/)\n\n## Components\n\n[Boilerplate Example](https://github.com/railz-ai/railz-uikit/blob/master/BOILERPLATE_COMPONENT.md) contains details on how to create a new component\n\nNew components should be associated with an [issue](https://github.com/railz-ai/railz-uikit/issues/new/choose). Ensure you use the issue number when committing your git messages.\n\n## Documentation\n\nSubmit a new [issue](https://github.com/railz-ai/railz-uikit/issues/new?assignees=&labels=&template=documentation-update-request.md&title=) with details containing information about new documentation item and it will be updated on our general docs page.\n\n## Examples\n\nDetails about any new component created should be added to the [examples](./examples) for the supported frameworks.\n\n## Best practices\n\nThe resources below show how we use best practises for our web components:\n\n- [Google Web Component Best Practices](https://developers.google.com/web/fundamentals/web-components/best-practices)\n- [Custom Element Conformance](https://html.spec.whatwg.org/multipage/custom-elements.html)\n\n## Structure\n\nThe component structure is based on the various libraries contained in this repository.\n\n### design-components\n\nContains components built using StencilJS\n\n### design-icons\n\nContains our icon library\n\n### design-tokens\n\nContains design tokens for our theming\n\n## Styling\n\nTo ensure that styles are encapsulated, set `shadow: true` in Stencil's `@Component` options. This aids in the consistency of our components across apps.\n\n## Updating The Documentation\n\nComponents documentation are automatically generated by Stencil based on the JSDocs included at the top of the component files and for all properties\nIt is important to always include this information to reduce the amount of work needed to update the documentation manually.\n\n#### 1. Add JSDocs to your component\n\nAn example\n\n```typescript jsx\n/**\n * @group RailzNested\n */\nexport class RailzNestedSum {\n  /**\n   * The first number to sum up\n   * @type number\n   * @default 0\n   */\n  @Prop() first: number = 0;\n\n  /**\n   * The second number\n   * @type number\n   * @default 0\n   */\n  @Prop() second: number = 0;\n}\n```\n\n##### Properties\n\n- **@group** - Only needed if component is used in conjuction with another component\n- **@type** - type of field\n- **@default** - default value of field\n\n#### 2. Add readme file using component class name in component folder\n\n##### Example of file name - `RailzNestedSum.md`\n\n##### Content of file\n\n```markdown\n---\ntitle: RailzNestedSum\n---\n\nComponent used to display the sum of two strings\n\n`/./readme.md`\n```\n\n## Test your changes\n\n[Codesandbox CI](https://codesandbox.io/docs/ci) is used to publish a working version of the packages for each pull request, \"a preview\".\n\n## Testing\n\nFor any new functionality or problem fixes, components should include unit tests. Ensure that all tests pass, as PRs will not be permitted to merge if even one of them fails.\nWe encourage you to write test cases and code that expresses your objective.\n\nSee Stencil's documentation on [unit testing](https://stenciljs.com/docs/unit-testing) testing. See one of our test examples [here](https://github.com/railz-ai/railz-uikit/blob/master/packages/components/src/components/statements-chart/test/statements-chart.spec.tsx).\n\n## Browser support\n\nSee our [README.md](https://github.com/railz-ai/railz-uikit#overview) for a list of supported browsers.\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/CONTRIBUTING.md"]},{"type":"separator"},{"filepath":"../design-components/packages/railz-components/src/components/railz-button/railz-button.md","title":"Railz Button","description":"","link":"railz-button","data":"# Buttons\n\nThe **railz-button** component is used for both `a` links and `button` elements and is specifically meant for things that look like\ntraditional buttons. It is not meant to be wrapper around all interactive things, only things that look to the user like a button.\n\n## Primary Button\n\nOut of the box, the `railz-button` component only requires a `label` property to present the user with a fully functional button. By default,\nyou get a **rounded, medium, primary** button. However, it would still need a `target` or `onClick` property passed to it to do\nanything meaningful.\n\n<railz-button label=\"Click me\" onClick={() => this.buttonClickTest()} loading={this.isLoading} />\n\n```\n<railz-button label=\"Click me\"  />\n```\n\n## Customization\n\nThe **button** component can be customized by defining `size`, `type`, `shape`, or by naming an `icon`. You can\nalso tell a button to fill it's available space by setting `grow`to `true`, and you can also set `disabled` and `loading`\nstates.\n\n# railz-button\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property     | Attribute     | Description | Type      | Default     |\n| ------------ | ------------- | ----------- | --------- | ----------- |\n| `grow`       | `grow`        |             | `boolean` | `undefined` |\n| `href`       | `href`        |             | `string`  | `undefined` |\n| `icon`       | `icon`        |             | `string`  | `undefined` |\n| `isDisabled` | `is-disabled` |             | `boolean` | `undefined` |\n| `label`      | `label`       |             | `string`  | `undefined` |\n| `loading`    | `loading`     |             | `boolean` | `undefined` |\n| `shape`      | `shape`       |             | `string`  | `'rounded'` |\n| `size`       | `size`        |             | `string`  | `'medium'`  |\n| `target`     | `target`      |             | `string`  | `'_blank'`  |\n| `type`       | `type`        |             | `string`  | `'primary'` |\n\n## Events\n\n| Event         | Description | Type               |\n| ------------- | ----------- | ------------------ |\n| `buttonClick` |             | `CustomEvent<any>` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-button --> railz-icon\n  style railz-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-button/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-icon/railz-icon.md","title":"Railz Icon","description":"","link":"railz-icon","data":"# Icons\n\n## Icon component\n\n**The railz-icon component** is a simple component that takes and icon name and an optional size prop.\n\n```\n<railz-icon icon=\"home\" />\n<railz-icon icon=\"home\" size=\"medium />\n```\n\nThis will return an inline SVG component and the `fill` color of the icon will be inherited by the `color` attribute of the parent element.\n\nIf you pass the component an icon name it doesn't recognize, make sure the **SVG** file is in `src/assets/icons` and has been added to the\nIcon Library by followin the instructions below.\n\n## Icon Library\n\n<!-- <icon-library-list /> -->\n\n## Generating the Icon Library\n\nThe icon library is built by scanning the project folder for any **SVG** files, then capturing the path data for each file and adding it to a JSON\nobject. The paths can then be loading into the `<railz-icon />` component by calling the original file name, minus the .svg file extension.\n\n### Update the Library\n\nFrom the project root, in the terminal, run:\n\n```\nnpm run generate:icons\n```\n\n# railz-icon\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property      | Attribute      | Description | Type     | Default     |\n| ------------- | -------------- | ----------- | -------- | ----------- |\n| `icon`        | `icon`         |             | `string` | `null`      |\n| `initialSize` | `initial-size` |             | `number` | `16`        |\n| `size`        | `size`         |             | `string` | `undefined` |\n\n## Dependencies\n\n### Used by\n\n- [railz-button](../railz-button)\n- [railz-icon-button](../railz-icon-button)\n- [railz-input-checkbox](../railz-input-checkbox)\n- [railz-input-select](../railz-input-select)\n- [railz-input-text](../railz-input-text)\n- [railz-input-toggle](../railz-input-toggle)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-button --> railz-icon\n  railz-icon-button --> railz-icon\n  railz-input-checkbox --> railz-icon\n  railz-input-select --> railz-icon\n  railz-input-text --> railz-icon\n  railz-input-toggle --> railz-icon\n  style railz-icon fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-icon/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-icon-button/railz-icon-button.md","title":"Railz Icon Button","description":"","link":"railz-icon-button","data":"# Icon Buttons\n\nOccaisionally, the interface design calls for a simple interactive icon. Rather than just adding an `onClick` event to an `railz-icon` component,\nit is strongly recommended to use the `railz-icon-button` component. This component has all of the affordances of a normal button - like focus, disabled, and\nloading states - that are required for creating a rich user experience.\n\n# railz-icon-button\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property   | Attribute  | Description | Type      | Default     |\n| ---------- | ---------- | ----------- | --------- | ----------- |\n| `disabled` | `disabled` |             | `boolean` | `undefined` |\n| `icon`     | `icon`     |             | `string`  | `undefined` |\n| `label`    | `label`    |             | `string`  | `undefined` |\n| `loading`  | `loading`  |             | `boolean` | `undefined` |\n| `shape`    | `shape`    |             | `string`  | `'rounded'` |\n| `size`     | `size`     |             | `string`  | `'medium'`  |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-icon-button --> railz-icon\n  style railz-icon-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n\n<iframe\nwidth=\"100%\"\nheight=\"1000px\"\nsrc=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FVSUSijO0GAHAJa69ICxBDi%2FRailz-Design-System%3Fnode-id%3D239%253A1665\"\n></iframe>\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-icon-button/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-checkbox/railz-input-checkbox.md","title":"Railz Input Checkbox","description":"","link":"railz-input-checkbox","data":"# Checkbox\n\nThe **checkbox** component uses the standard HTML `input type=\"checkbox` element to manage state, and can receive all the same properties and attributes.\n\n# railz-input-checkbox\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property            | Attribute            | Description | Type      | Default     |\n| ------------------- | -------------------- | ----------- | --------- | ----------- |\n| `checked`           | `checked`            |             | `boolean` | `undefined` |\n| `disabled`          | `disabled`           |             | `boolean` | `undefined` |\n| `error`             | `error`              |             | `boolean` | `undefined` |\n| `errorMessage`      | `error-message`      |             | `string`  | `undefined` |\n| `indeterminate`     | `indeterminate`      |             | `boolean` | `undefined` |\n| `inputId`           | `input-id`           |             | `string`  | `undefined` |\n| `instructionalText` | `instructional-text` |             | `string`  | `undefined` |\n| `label`             | `label`              |             | `string`  | `undefined` |\n| `name`              | `name`               |             | `string`  | `undefined` |\n| `required`          | `required`           |             | `string`  | `undefined` |\n| `value`             | `value`              |             | `string`  | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-checkbox --> railz-icon\n  style railz-input-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-checkbox/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-radio/railz-input-radio.md","title":"Railz Input Radio","description":"","link":"railz-input-radio","data":"# Radio\n\nThe **radio** component uses the standard HTML `input type=\"radio` element to manage state, and can receive all the same properties and attributes.\n\n# railz-input-radio\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property            | Attribute            | Description | Type      | Default     |\n| ------------------- | -------------------- | ----------- | --------- | ----------- |\n| `checked`           | `checked`            |             | `boolean` | `undefined` |\n| `disabled`          | `disabled`           |             | `boolean` | `undefined` |\n| `error`             | `error`              |             | `boolean` | `undefined` |\n| `errorMessage`      | `error-message`      |             | `string`  | `undefined` |\n| `indeterminate`     | `indeterminate`      |             | `boolean` | `undefined` |\n| `inputId`           | `input-id`           |             | `string`  | `undefined` |\n| `instructionalText` | `instructional-text` |             | `string`  | `undefined` |\n| `label`             | `label`              |             | `string`  | `undefined` |\n| `name`              | `name`               |             | `string`  | `undefined` |\n| `required`          | `required`           |             | `string`  | `undefined` |\n| `value`             | `value`              |             | `string`  | `undefined` |\n\n## Dependencies\n\n### Used by\n\n- [railz-input-radio-group](../railz-input-radio-group)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-radio-group --> railz-input-radio\n  style railz-input-radio fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-radio/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-radio-group/railz-input-radio-group.md","title":"Railz Input Radio Group","description":"","link":"railz-input-radio-group","data":"# Radio group\n\nThe **radio group** component is designed to make it easier to create simple lists of radio options. Pass an array of options and the `railz-radio-group` component will return a set of linked **radio input** elements.\n\n# railz-input-radio-group\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property  | Attribute | Description | Type           | Default     |\n| --------- | --------- | ----------- | -------------- | ----------- |\n| `options` | --        |             | `RadioInput[]` | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-input-radio](../railz-input-radio)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-radio-group --> railz-input-radio\n  style railz-input-radio-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-radio-group/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-select/railz-input-select.md","title":"Railz Input Select","description":"","link":"railz-input-select","data":"# Select Input\n\nThe **select** component uses the standard HTML `select` element to manage state, and can receive all the same properties and attributes. It presents a list of of singularly selectable options in the browser's default interface.\n\nIt is ideal for completing forms. It is not inteded as a replacement for a dropdown or popover menu.\n\n# railz-input-select\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property            | Attribute            | Description | Type      | Default     |\n| ------------------- | -------------------- | ----------- | --------- | ----------- |\n| `disabled`          | `disabled`           |             | `boolean` | `undefined` |\n| `error`             | `error`              |             | `boolean` | `undefined` |\n| `errorMessage`      | `error-message`      |             | `string`  | `undefined` |\n| `instructionalText` | `instructional-text` |             | `string`  | `undefined` |\n| `label`             | `label`              |             | `string`  | `undefined` |\n| `required`          | `required`           |             | `boolean` | `undefined` |\n| `value`             | `value`              |             | `string`  | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-select --> railz-icon\n  style railz-input-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-select/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-text/railz-input-text.md","title":"Railz Text Input","description":"","link":"railz-text-input","data":"# Text Inputs\n\n**Text inputs** can be tricky elements to integrate, with a myriad of attributes for as multitude of use cases. The `<railz-input-text />`\ncomponent attempts to address many of the most common applications of a text input.\n\n## Text Text Input Component\n\nThe **text-input** component can receive a long list of properties, but the only mandatory one is the `label`.\n\n<!-- <railz-input-text label=\"Address\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your address\" /> -->\n\n```\n<railz-input-text label=\"Address\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your address\" />\n```\n\n## States and Variations\n\n### Error\n\nIf an error message is passed to the input component, it will display an error state\n\n<!-- <railz-input-text label=\"Address\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your address\" errorMessage=\"Your address is incorrect\" /> -->\n\n```\n<railz-input-text label=\"Address\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your address\" errorMessage=\"Your address is incorrect\" />`}`\n\n```\n\n### Input Types, Modes & Autocomplete\n\nChoosing the correct type, inputmode, and autocomplete values is critical to providing users with a quality user experience. The effects are most visible on mobile\ndevices where the virtual keyboard can be customized to optimize input.\n\nThe`railz-input-text` component can receive all standard values for`type`,`inputmode`,`autocomplete`,\n`pattern`,`min & max`. Check out the documentation on MDN for more details.\n\n<!-- <railz-input-text label=\"Phone Number\" placeholder=\"416-555-5555\" type=\"tel\" autocomplete=\"tel\" inputmode=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" /> -->\n\n```\n<railz-input-text label=\"Phone Number\" placeholder=\"416-555-5555\" type=\"tel\" autocomplete=\"tel\" inputmode=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" />`}`\n```\n\n<!-- <img src=\"../assets/keyboard-tel.png\" /> -->\n<!-- <railz-input-text label=\"Email\" placeholder=\"zach@railz.ai\" type=\"email\" autocomplete=\"email\" /> -->\n\n```\n<railz-input-text label=\"Email\" placeholder=\"zach@railz.ai\" type=\"email\"  autocomplete=\"email\" />`}`\n```\n\n<!-- <img src=\"../assets/keyboard-email.png\" />\n<railz-input-text label=\"Contact name\" placeholder=\"Zach Forrester\" type=\"text\" autocomplete=\"name\" /> -->\n\n```\n<railz-input-text label=\"Contact name\" placeholder=\"Zach Forrester\" type=\"text\"  autocomplete=\"name\" />`}`\n```\n\n<!-- <img src=\"../assets/keyboard-name.png\" />\n<railz-input-text label=\"Decimal Amount\" placeholder=\"47.5\" inputmode=\"decimal\" /> -->\n\n```\n<railz-input-text label=\"Decimal Amount\" placeholder=\"47.5\" inputmode=\"decimal\" />`}`\n```\n\n<!-- <railz-input-text label=\"Number Amount\" placeholder=\"47.5\" inputmode=\"numeric\" type=\"number\" minNumber=\"-5\" maxNumber=\"5\" /> -->\n\n```\n<railz-input-text label=\"Number Amount\" placeholder=\"47.5\" inputmode=\"numeric\" type=\"number\" minNumber=\"-5\" maxNumber=\"5\" />`}`\n```\n\n<!-- <railz-input-text label=\"Company Website\" placeholder=\"www.railz.ca\" inputmode=\"url\" type=\"url\" /> -->\n\n```\n<railz-input-text label=\"Website\" placeholder=\"www.railz.ca\" inputmode=\"url\" type=\"url\" />`}`\n```\n\n## Adornments\n\nThe **text-input** component can also display prefix or suffix elements.\n\nThe adornments can either be text, icons, interactive elements, or basically any valid HTML.The prefix adornment is hidden unless the input is focused or filled. If\nyou need an icon to be visible at all times, consider using the`prefix-icon` property.\n\n<!-- <railz-input-text label=\"Website\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your wesbite\">\n<span slot=\"prefix\">https://</span>\n<railz-icon icon=\"api_keys\" slot=\"suffix\" size=\"medium\" />\n</railz-input-text> -->\n\n```\n<railz-input-text label=\"Website\" placeholder=\"345 Lichfeild\" instructionalText=\"Enter your wesbite\">\n    <span slot=\"prefix\">https://</span>\n    <railz-icon icon=\"api_keys\" slot=\"suffix\" size=\"medium\" />\n</railz-input-text>\n```\n\nSpecifying the **prefix-icon** is the easiest way to add an icon to the front of a text input. It will be size appropriately, and is styled to reflect\nthe state of the input.\n\n<!-- <railz-input-text label=\"Bank Name\" placeholder=\"TD Canada Trust\" prefixIcon=\"banking\" errorMessage=\"Thats not a bank\">\n<railz-button shape=\"pill\" slot=\"suffix\" label=\"Search\" type=\"primary\" size=\"small\" />\n</railz-input-text> -->\n\n```\n<railz-input-text label=\"Bank Name\" placeholder=\"TD Canada Trust\" prefixIcon=\"banking\" errorMessage=\"Thats not a bank\">\n    <railz-button slot=\"suffix\" label=\"Search\" type=\"primary\" size=\"small\" />\n</railz-input-text>\n```\n\n# railz-input-text\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property            | Attribute            | Description | Type      | Default     |\n| ------------------- | -------------------- | ----------- | --------- | ----------- |\n| `autocomplete`      | `autocomplete`       |             | `string`  | `undefined` |\n| `disabled`          | `disabled`           |             | `boolean` | `undefined` |\n| `enterkeyhint`      | `enterkeyhint`       |             | `string`  | `undefined` |\n| `error`             | `error`              |             | `boolean` | `undefined` |\n| `errorMessage`      | `error-message`      |             | `string`  | `undefined` |\n| `inputId`           | `input-id`           |             | `string`  | `undefined` |\n| `inputmode`         | `inputmode`          |             | `string`  | `undefined` |\n| `instructionalText` | `instructional-text` |             | `string`  | `undefined` |\n| `label`             | `label`              |             | `string`  | `undefined` |\n| `maxContentLength`  | `max-content-length` |             | `number`  | `undefined` |\n| `maxNumber`         | `max-number`         |             | `string`  | `undefined` |\n| `minContentLength`  | `min-content-length` |             | `number`  | `undefined` |\n| `minNumber`         | `min-number`         |             | `string`  | `undefined` |\n| `pattern`           | `pattern`            |             | `string`  | `undefined` |\n| `placeholder`       | `placeholder`        |             | `string`  | `undefined` |\n| `prefixIcon`        | `prefix-icon`        |             | `string`  | `undefined` |\n| `required`          | `required`           |             | `boolean` | `undefined` |\n| `type`              | `type`               |             | `string`  | `undefined` |\n| `value`             | `value`              |             | `string`  | `undefined` |\n\n## Events\n\n| Event         | Description | Type               |\n| ------------- | ----------- | ------------------ |\n| `valueChange` |             | `CustomEvent<any>` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-text --> railz-icon\n  style railz-input-text fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-text/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-input-toggle/railz-input-toggle.md","title":"Railz Input Toggle","description":"","link":"railz-input-toggle","data":"# Toggle\n\nThe **toggle** component uses the standard HTML `input type=\"checkbox` element to manage state, and can receive all the same properties and attributes.\n\n# railz-input-toggle\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property            | Attribute            | Description | Type      | Default     |\n| ------------------- | -------------------- | ----------- | --------- | ----------- |\n| `checked`           | `checked`            |             | `boolean` | `undefined` |\n| `disabled`          | `disabled`           |             | `boolean` | `undefined` |\n| `error`             | `error`              |             | `boolean` | `undefined` |\n| `errorMessage`      | `error-message`      |             | `string`  | `undefined` |\n| `indeterminate`     | `indeterminate`      |             | `boolean` | `undefined` |\n| `inputId`           | `input-id`           |             | `string`  | `undefined` |\n| `instructionalText` | `instructional-text` |             | `string`  | `undefined` |\n| `label`             | `label`              |             | `string`  | `undefined` |\n| `name`              | `name`               |             | `string`  | `undefined` |\n| `required`          | `required`           |             | `string`  | `undefined` |\n| `value`             | `value`              |             | `string`  | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [railz-icon](../railz-icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  railz-input-toggle --> railz-icon\n  style railz-input-toggle fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-input-toggle/readme.md"]},{"filepath":"../design-components/packages/railz-components/src/components/railz-status-pill/railz-status-pill.md","title":"Railz Status Pill","description":"","link":"railz-status-pill","data":"# Status Pill\n\nThe **status pill** component is used to convey status to the user. It is non-interactive, and should be able to be undertood with a quick glance, using simple, single words, colour, and iconography like a checkmark, if needed.\n\n# railz-status-pill\n\n<!-- Auto Generated Below -->\n\n## Properties\n\n| Property | Attribute | Description | Type     | Default     |\n| -------- | --------- | ----------- | -------- | ----------- |\n| `icon`   | `icon`    |             | `string` | `undefined` |\n| `label`  | `label`   |             | `string` | `undefined` |\n| `status` | `status`  |             | `string` | `undefined` |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n\n","type":"md","dependencies":["/home/runner/work/railz-uikit/railz-uikit/design-components/packages/railz-components/src/components/railz-status-pill/readme.md"]}
]